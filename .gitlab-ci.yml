variables:
  DOCKER_HOST: tcp://docker:2375/
  QUANTUM_CLI: registry.internal.planetary-networks.de/quantum-public/cli:2
  DOCKER_AUTH_CONFIG: '{ "auths": { "https://index.docker.io/v1/": { "auth": "$DOCKER_AUTH" } }}'

stages:
  - build
  - build_release
  - deploy_release

services:
  - docker:19.03.3-dind

before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - docker login -u $DOCKERHUB_LOGIN -p $DOCKERHUB_PASSWORD


docker-build:
  variables:
    IMAGE: $CI_REGISTRY_IMAGE
    DOCKERFILE: Dockerfile
  stage: build
  allow_failure: false
  script:
    - docker pull $IMAGE:saas || true
    - docker build --cache-from $IMAGE:saas --tag $IMAGE:$CI_COMMIT_SHA --tag $IMAGE:saas -f $DOCKERFILE .
    - docker push $IMAGE:$CI_COMMIT_SHA
    - docker push $IMAGE:saas
  only:
    - saas

.docker_build_release:
  stage: build_release
  image:
    name: docker/compose:1.25.0
    entrypoint: ["/bin/sh", "-c"]
  cache:
    key: "${CI_PIPELINE_ID}-${PROJECT}"
    paths: [quantum.yml]
  script:
    - docker-compose -f docker-compose.yml -f stack.yml config > quantum.yml
  tags: [v2]
  allow_failure: false
  when: on_success
  only:
    - saas

.deploy_release:
  stage: deploy_release
  needs: ["docker-build"]
  image: $QUANTUM_CLI
  cache:
    key: "${CI_PIPELINE_ID}-${PROJECT}"
    paths: [quantum.yml]
  script:
    - quantum-cli stack update --create --stack $PROJECT$SERVICENAME --wait
  tags: [v2]
  allow_failure: false
  when: on_success
  only:
    - saas

#
# List of releases to build
#

saas-build:
  extends: .docker_build_release
  variables:
    PROJECT: saas
    NODENAME: node-004.sva

#
# List of releases to deploy
#

saas-deploy:
  extends: .deploy_release
  needs: ["saas-build"]
  variables:
    SERVICENAME: "-mainserver"
    PROJECT: saas
    QUANTUM_ENDPOINT: sva
